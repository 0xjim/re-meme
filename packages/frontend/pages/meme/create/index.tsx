import { NextPage } from "next"
import Head from "next/head";
import { useRouter } from "next/router";
import React, { useState } from "react";
import { Col, Container, Row } from "react-bootstrap";
import { GoBackButton } from "../../../components/Buttons/GoBackBtn";
import PageLayout from "../../../components/Layout";
import { ConfirmModal } from "../../../components/Modals/Confirm";
import { FeedbackModal } from "../../../components/Modals/Feedback";
import { delay } from "../../../utils/time";
import CreateStep from "./CreateStep";
import EditStep from "./EditStep";
import FeedbackStep from "./FeedbackStep";

interface Profile {
    id: number
    name: string
    profilePic: string
}

export interface MemeData {
    id: number
    src: string
    mockProfile: Profile
    remixCount: number
    publicationDate: number
    
}

type CreateMemePageProps = {
    exampleMeme: MemeData
}

const CreateMemePage: NextPage<CreateMemePageProps> = ({ exampleMeme }) => {
    const [ step, setStep ] = useState(0);
    const [initialImage, setInitialImage] = useState<string>();
    const [ uploadedImage, setUploadedImage ] = useState<string>();
    const [showFeedback, setShowFeedback] = useState(false);
    const router = useRouter();

    const goNext = () => setStep(step => step + 1)

    const onBackClick = () => {
        if(step === 0) router.push('/')
        else {
            setInitialImage(undefined)
            setStep(step => step-1)
        }
    }

    const handleUpload = (svg: string) => {
        setUploadedImage(svg)
        goNext()
    }

    return (
        <div className='home-bg min-h-screen'>
            <Head>
                <title></title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
                <link href="https://fonts.googleapis.com/css2?family=JetBrains+Mono:wght@300;400;500;600;700;800&display=swap" rel="stylesheet" />
            </Head>
            <FeedbackModal show={showFeedback} />
            <PageLayout>
                <Container fluid="md" className='h-full'>
                    <Row className='mb-4'>
                        <Col>
                            <GoBackButton onClick={onBackClick} />
                        </Col>
                    </Row>
                    <Row>
                        { step === 0 && <CreateStep meme={exampleMeme} setInitialImage={setInitialImage} goNext={goNext} /> }
                        { step === 1 && <EditStep initialImage={initialImage} onUpload={handleUpload} /> }
                        { step === 2 && uploadedImage && <FeedbackStep image={uploadedImage} />}
                    </Row>
                </Container>

            </PageLayout>
        </div>
    )
}

export const getStaticProps = async ({ params }: any): Promise<{ props: CreateMemePageProps }> => {

    //TODO retrieve random meme with apollo

    const meme = {
        id: 1,
        src: "/assets/imgs/meme.png",
        mockProfile: {
            id: 1,
            name: "cryptopunk",
            profilePic: "/assets/imgs/punk.png"
        },
        remixCount: 210,
        publicationDate: new Date().getTime()
    }

    return {
        props: {
            exampleMeme: meme,
        }
    }

}

export default CreateMemePage
