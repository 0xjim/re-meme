import { NextPage } from "next"
import Head from "next/head";
import { useRouter } from "next/router";
import { Col, Container, Row } from "react-bootstrap";
import { GoBackButton } from "../../components/Buttons/GoBackBtn";
import PageLayout from "../../components/Layout";
import { MemeDetail } from "../../components/MemeDetail";
import { RemixBtnBox } from "../../components/Remix/RemixBtnBox";
import { RemixCreatedBox } from "../../components/Remix/RemixCreatedBox";
import { RemixShareBox } from "../../components/Remix/RemixShareBox";

type MemePageProps = {
    meme: any; //Meme
}

const MemePage: NextPage = (props: any) => {
    const router = useRouter();
    const { created } = router.query;

    const handleRemixMeme = () => {
        router.push(`/meme/edit/${props.meme.id}`)
    }

    return (
        <div className='home-bg min-h-screen'>
            <Head>
                <title></title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
                <link href="https://fonts.googleapis.com/css2?family=JetBrains+Mono:wght@300;400;500;600;700;800&display=swap" rel="stylesheet" />
            </Head>
            <PageLayout>
                <Container fluid="md" className='h-full'>
                    <Row className='mb-4'>
                        <Col>
                            <GoBackButton route="/" />
                        </Col>
                    </Row>
                    <Row className='mt-auto'>
                        <Col>
                            <article className='space-y-10'>
                                <Row>
                                    <Col>
                                        <section className='flex flex-col sm:flex-col lg:flex-row gap-6'>
                                            <MemeDetail meme={props.meme} />
                                            {
                                                Boolean(created) ?
                                                    <RemixCreatedBox meme={props.meme} />
                                                :
                                                    <div className='flex flex-col space-y-10 w-full h-auto'>
                                                        <RemixBtnBox onRemixBtnClicked={handleRemixMeme} />
                                                        <RemixShareBox meme={props.meme} />
                                                    </div>
                                            }
                                        </section>
                                    </Col>
                                </Row>
                            </article>
                        </Col>
                    </Row>
                </Container>

            </PageLayout>
        </div>
    )
}

export const getStaticProps = async ({ params }: any): Promise<{ props: MemePageProps }> => {

    //TODO retrieve memes from user with apollo

    const meme = {
        id: params.memeId,
        src: "/assets/imgs/meme.png",
        mockProfile: {
            id: 1,
            name: "cryptopunk",
            profilePic: "/assets/imgs/punk.png"
        },
        remixCount: 210,
        publicationDate: new Date().getTime()
    }

    return {
        props: {
            meme: meme,
        }
    }

}

export async function getStaticPaths() {
    // TODO Get All the memes here to create all the static pages

    const memes = [
        {
            memeId: '1'
        },
        {
            memeId: '2'
        },
        {
            memeId: '3'
        },
        {
            memeId: '4'
        },
    ]

    return {
        paths: memes.map(meme => { return { params: { memeId: meme.memeId } } }),
        fallback: false
    }
}

export default MemePage
