import type { NextPage } from 'next'
import Head from 'next/head'
import { useRouter } from 'next/router'
import { useState } from 'react'
import { Col, Container, Row } from 'react-bootstrap'
import { useSelector } from 'react-redux'
import PageLayout from '../components/Layout'
import { ConnectionBox } from '../components/Layout/ConnectionBox'
import { MemeDetail } from '../components/Meme/MemeDetail'
import { SelectProfile } from '../components/Modals/SelectProfile'
import { RemixBtnBox } from '../components/Remix/RemixBtnBox'
import { RemixShareBox } from '../components/Remix/RemixShareBox'
import useWindowDimensions from '../hooks/window-dimensions.hook'
import { LoginStatus } from '../models/Connection/connection.model'
import { User } from '../models/User/user.model'

type HomePageProps = {
  exampleMeme: any; //Meme
}

const Home: NextPage = (props: any) => {
  const { width } = useWindowDimensions();
  const router = useRouter();
  const user: User = useSelector((state: any) => state.user.selectedUser);

  const mockMeme = {
    id: 1,
    src: "/assets/imgs/distracted boyfriend.png",
    mockProfile: {
      name: "cryptopunk",
      profilePic: "/assets/imgs/punk.png"
    },
    remixCount: 210,
    publicationDate: new Date()
  }

  const handleRemixMeme = () => {
    router.push(`/meme/edit/${mockMeme.id}`)
  }

  return (
    <div className='home-bg min-h-screen'>
      <Head>
        <title></title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        {/* <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" /> */}
        <link href="https://fonts.googleapis.com/css2?family=JetBrains+Mono:wght@300;400;500;600&display=swap" rel="stylesheet" />
      </Head>
      <PageLayout>
        <Container fluid="md" className='h-full'>
          <Row className='mt-auto'>
            <Col>
              <article className='space-y-10'>
                {
                  width > 850 && !user ?
                    <Row>
                      <Col>
                        <header>
                          <ConnectionBox />
                        </header>
                      </Col>
                    </Row>
                    : null
                }
                <Row>
                  <Col>
                    <section className='flex flex-col sm:flex-col lg:flex-row gap-6'>
                      <MemeDetail meme={mockMeme} />
                      <div className='flex flex-col space-y-10 w-full h-auto'>
                        <RemixBtnBox onRemixBtnClicked={handleRemixMeme} />
                        <RemixShareBox meme={props.meme} />
                      </div>
                    </section>
                  </Col>
                </Row>
              </article>
            </Col>
          </Row>
        </Container>

      </PageLayout>
    </div>
  )
}

export const getStaticProps = async ({ params }: any): Promise<{ props: HomePageProps }> => {
  //TODO retrieve random meme with apollo

  const meme = {
      id: 1,
      src: "/assets/imgs/meme.png",
      mockProfile: {
          id: 1,
          name: "cryptopunk",
          profilePic: "/assets/imgs/punk.png"
      },
      remixCount: 210,
      publicationDate: new Date().getTime()
  }

  return {
      props: {
          exampleMeme: meme,
      }
  }

}

export default Home
